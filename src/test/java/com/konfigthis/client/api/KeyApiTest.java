/*
 * Lambda Cloud API
 * API for interacting with the Lambda GPU Cloud
 *
 * The version of the OpenAPI document: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.KeyAddSshKeyRequest;
import com.konfigthis.client.model.KeyAddSshKeyResponse;
import com.konfigthis.client.model.KeyGetListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeyApi
 */
@Disabled
public class KeyApiTest {

    private static KeyApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new KeyApi(apiClient);
    }

    /**
     * Add SSH key
     *
     * Add an SSH key  To use an existing key pair, enter the public key for the &#x60;public_key&#x60; property of the request body.  To generate a new key pair, omit the &#x60;public_key&#x60; property from the request body. Save the &#x60;private_key&#x60; from the response somewhere secure. For example, with curl:  &#x60;&#x60;&#x60; curl https://cloud.lambdalabs.com/api/v1/ssh-keys \\   --fail \\   -u ${LAMBDA_API_KEY}: \\   -X POST \\   -d &#39;{\&quot;name\&quot;: \&quot;new key\&quot;}&#39; \\   | jq -r &#39;.data.private_key&#39; &gt; key.pem  chmod 400 key.pem &#x60;&#x60;&#x60;  Then, after you launch an instance with &#x60;new key&#x60; attached to it: &#x60;&#x60;&#x60; ssh -i key.pem &lt;instance IP&gt; &#x60;&#x60;&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addSshKeyTest() throws ApiException {
        String name = null;
        String publicKey = null;
        KeyAddSshKeyResponse response = api.addSshKey(name)
                .publicKey(publicKey)
                .execute();
        // TODO: test validations
    }

    /**
     * List SSH keys
     *
     * Retrieve the list of SSH keys
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        KeyGetListResponse response = api.getList()
                .execute();
        // TODO: test validations
    }

}
