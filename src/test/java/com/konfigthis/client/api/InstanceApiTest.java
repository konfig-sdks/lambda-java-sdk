/*
 * Lambda Cloud API
 * API for interacting with the Lambda GPU Cloud
 *
 * The version of the OpenAPI document: 1.5.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.InstanceCreateInstancesRequest;
import com.konfigthis.client.model.InstanceCreateInstancesResponse;
import com.konfigthis.client.model.InstanceGetDetailsResponse;
import com.konfigthis.client.model.InstanceListRunningInstancesResponse;
import com.konfigthis.client.model.InstanceRestartInstancesRequest;
import com.konfigthis.client.model.InstanceRestartInstancesResponse;
import com.konfigthis.client.model.InstanceTerminateInstanceRequest;
import com.konfigthis.client.model.InstanceTerminateInstanceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InstanceApi
 */
@Disabled
public class InstanceApiTest {

    private static InstanceApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new InstanceApi(apiClient);
    }

    /**
     * Launch instances
     *
     * Launches one or more instances of a given instance type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInstancesTest() throws ApiException {
        String regionName = null;
        String instanceTypeName = null;
        List<String> sshKeyNames = null;
        List<String> fileSystemNames = null;
        Integer quantity = null;
        String name = null;
        InstanceCreateInstancesResponse response = api.createInstances(regionName, instanceTypeName, sshKeyNames)
                .fileSystemNames(fileSystemNames)
                .quantity(quantity)
                .name(name)
                .execute();
        // TODO: test validations
    }

    /**
     * List details of a specific instance
     *
     * Retrieves details of a specific instance, including whether or not the instance is running. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String id = null;
        InstanceGetDetailsResponse response = api.getDetails(id)
                .execute();
        // TODO: test validations
    }

    /**
     * List running instances
     *
     * Retrieves a detailed list of running instances.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRunningInstancesTest() throws ApiException {
        InstanceListRunningInstancesResponse response = api.listRunningInstances()
                .execute();
        // TODO: test validations
    }

    /**
     * Restart instances
     *
     * Restarts the given instances.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void restartInstancesTest() throws ApiException {
        List<String> instanceIds = null;
        InstanceRestartInstancesResponse response = api.restartInstances(instanceIds)
                .execute();
        // TODO: test validations
    }

    /**
     * Terminate an instance
     *
     * Terminates a given instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void terminateInstanceTest() throws ApiException {
        List<String> instanceIds = null;
        InstanceTerminateInstanceResponse response = api.terminateInstance(instanceIds)
                .execute();
        // TODO: test validations
    }

}
